{"version":3,"sources":["components/redux/contact/actions.js","components/filter/Filter.js","components/redux/contact/contacts-operations.js","components/contacts/ContactsForm.js","components/contacts/ContactsItems.js","components/phonebook/PhoneBook.js","components/redux/auth/auth-actions.js","components/redux/auth/auth-reducers.js","components/redux/auth/auth-operations.js","components/redux/auth/auth-selectors.js","components/login/Login.js","components/register/Register.js","components/avatarAndName/AvatarAndName.js","components/logAndRegister/LogAndRegister.js","components/header/Navigation.js","components/header/Header.js","components/homepage/HomePage.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","components/redux/contact/redusers.js","components/redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","mapDispatchToProps","actions","connect","state","contacts","filter","style","display","marginTop","marginBottom","width","type","name","value","onChange","e","target","placeholder","addContact","number","id","dispatch","contact","axios","post","then","data","catch","error","message","deleteContact","contactId","delete","fetchContacts","get","ContactsForm","handleChange","event","setState","handleSubmit","preventDefault","props","uuidv4","onSubmit","this","border","height","backgroundColor","color","Component","contactsItems","TransitionGroup","className","item","toLowerCase","includes","filtredArr","map","el","CSSTransition","key","timeout","classNames","IconButton","aria-label","onClick","PhoneBook","isExsist","in","appear","unmountOnExit","operations","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","createReducer","authActions","_","payload","token","isAuthenticated","combineReducers","defaults","baseURL","headers","common","Authorization","register","credentials","a","response","logIn","logOut","getCurrrentUser","getState","persistedToken","auth","styles","form","marginLeft","marginRight","label","flexDirection","title","justifyContent","Login","password","onLogin","autoComplete","TextField","variant","Button","authOperations","Register","AvatarAndName","useDispatch","useSelector","LogAndRegister","to","Navigation","Header","image","homePage","src","alt","authSelectors","component","redirectTo","routeProps","render","restricted","App","onRefresh","exact","path","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d2785dbe.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\n\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactsRequest');\n\nexport const addContactSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactError = createAction('contacts/addContactsError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\n\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactsError');\n\nexport const deleteContact = createAction('phonebook/delete');\n\nexport const changeFilter = createAction('phonebook/filter');\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/contact/actions';\n\nfunction Filter({ filter, changeFilter }) {\n  return (\n    <>\n      <input\n        style={{\n          display: 'block',\n          marginTop: '5px',\n          marginBottom: '10px',\n          width: '100%',\n        }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => changeFilter(e.target.value)}\n        placeholder=\"find contact\"\n      ></input>\n    </>\n  );\n}\nconst mapStateToProps = state => {\n  return { contacts: state.contacts.contacts };\n};\n\nconst mapDispatchToProps = {\n  changeFilter: actions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './actions';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error.message)));\n};\n\nconst addContact = ({ name, number, id }) => dispatch => {\n  const contact = { name, number, id };\n\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport addContact from '../redux/contact/contacts-operations';\nimport { connect } from 'react-redux';\n\nclass ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addContact({\n      name: this.state.name,\n      id: uuidv4(),\n      number: this.state.number,\n    });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        style={{\n          border: '1px solid whisper',\n          width: '400px',\n          height: '165px',\n        }}\n      >\n        <label>Name</label>\n        <input\n          name=\"name\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        ></input>\n        <label>Number</label>\n        <input\n          name=\"number\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n        ></input>\n\n        <button\n          style={{\n            marginTop: '15px',\n            width: '100%',\n            backgroundColor: 'royalblue',\n            color: 'white',\n            height: '35px',\n          }}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default connect(null, addContact)(ContactsForm);\n","import React from 'react';\nimport './ContactsItems.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport deleteContact from '../redux/contact/contacts-operations';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nconst filtredArr = (contactsItems, filter) => {\n  return filter\n    ? contactsItems.filter(item =>\n        item.name.toLowerCase().includes(filter.toLowerCase()),\n      )\n    : contactsItems;\n};\nfunction ContactsItems({ contactsItems, deleteContact, filter }) {\n  return (\n    <TransitionGroup className=\"list\">\n      {filtredArr(contactsItems, filter).map(el => (\n        <CSSTransition key={el.id} timeout={300} classNames=\"list-fade\">\n          <li key={el.id} className=\"item\">\n            <p>{el.name}</p>\n            <p>{el.number}</p>\n            <IconButton\n              aria-label=\"delete\"\n              onClick={() => deleteContact(el.id)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\nconst mapStateToProps = state => ({\n  contactsItems: state.contacts.contacts,\n  filter: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(deleteContact.deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsItems);\n","import React, { Component } from 'react';\nimport Filter from '../filter/Filter';\nimport ContactsForm from '../contacts/ContactsForm';\nimport ContactsItems from '../contacts/ContactsItems';\nimport './PhoneBook.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport operations from '../redux/contact/contacts-operations';\n\nclass PhoneBook extends Component {\n  state = {\n    isExsist: false,\n  };\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"Phone-slideIn\"\n          timeout={1000}\n          unmountOnExit\n        >\n          <h1 className=\"Phone\">PhoneBook</h1>\n        </CSSTransition>\n        <CSSTransition\n          in={this.state.isExsist}\n          classNames=\"alert\"\n          timeout={500}\n          unmountOnExit\n        >\n          <h2 className=\"alert\">This name is already in contacts!</h2>\n        </CSSTransition>\n        <ContactsForm />\n        <CSSTransition\n          //\n          in={this.props.filter !== ''}\n          timeout={500}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <ContactsItems />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contactsItems: state.contacts.contacts,\n  filter: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n  isAuthenticated,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\nconst getCurrrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrrentUser };\n","const getIsAuthenticted = state => state.auth.isAuthenticated;\n\nexport default { getIsAuthenticted };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  form: {\n    width: 320,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n};\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onLogin(this.state);\n    this.setState({ email: '', password: '' });\n  };\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <h1 style={styles.title}>Страница логина</h1>\n        <form\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n          style={styles.form}\n        >\n          <TextField\n            style={styles.label}\n            label=\"Почта\"\n            variant=\"outlined\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <TextField\n            style={styles.label}\n            label=\" Пароль\"\n            variant=\"outlined\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Войти\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = {\n  form: {\n    width: 320,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n};\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', email: '', password: '' });\n  };\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div>\n        <h1 style={styles.title}>Страница регистрации</h1>\n        <form\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n          style={styles.form}\n        >\n          <TextField\n            style={styles.label}\n            label=\"Имя\"\n            variant=\"outlined\"\n            type=\"name\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n          <TextField\n            style={styles.label}\n            label=\"Почта\"\n            variant=\"outlined\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <TextField\n            style={styles.label}\n            label=\"Пароль\"\n            variant=\"outlined\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Зарегистрироваться\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onSubmit: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../header/navigation.css';\nimport './avatar.css';\nimport { authOperations } from '../redux/auth';\nimport Button from '@material-ui/core/Button';\nfunction AvatarAndName() {\n  const dispatch = useDispatch();\n  const name = useSelector(state => state.auth.user.name);\n  const handleClick = () => {\n    dispatch(authOperations.logOut());\n  };\n  return (\n    <div className=\"avatar-container\">\n      <span className=\"avatar-title\">Welcome, {name} </span>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        onClick={handleClick}\n      >\n        Выйти\n      </Button>\n    </div>\n  );\n}\nexport default AvatarAndName;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../header/navigation.css';\nimport '../login/login.css';\nfunction LogAndRegister() {\n  return (\n    <ul className=\"nav-list log-list\">\n      <li className=\"nav-link\">\n        <NavLink to=\"/login\" className=\"nav-link-item\">\n          Войти\n        </NavLink>\n      </li>\n      <li className=\"nav-link\">\n        <NavLink to=\"/register\" className=\"nav-link-item\">\n          Зарегистрироватся\n        </NavLink>\n      </li>\n    </ul>\n  );\n}\nexport default LogAndRegister;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport './navigation.css';\nconst Navigation = () => {\n  const token = useSelector(state => state.auth.token);\n  return (\n    <nav>\n      <ul className=\"nav-list\">\n        <li className=\"nav-link\">\n          <NavLink to=\"/\" className=\"nav-link-item\">\n            Главная\n          </NavLink>\n        </li>\n        {token && (\n          <li className=\"nav-link\">\n            <NavLink to=\"/contacts\" className=\"nav-link-item\">\n              Контакты\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AvatarAndName from '../avatarAndName/AvatarAndName';\nimport LogAndRegister from '../logAndRegister/LogAndRegister';\nimport Navigation from './Navigation';\nimport './navigation.css';\nconst Header = () => {\n  const token = useSelector(state => state.auth.token);\n  return (\n    <header className=\"header\">\n      <Navigation />\n      {token ? <AvatarAndName /> : <LogAndRegister />}\n    </header>\n  );\n};\nexport default Header;\n","import React from 'react';\n\nconst styles = {\n  image: {\n    width: '100%',\n    height: 'auto',\n    display: 'block',\n  },\n};\nexport const homePage = () => {\n  return (\n    <img\n      style={styles.image}\n      src={\n        'https://st2.depositphotos.com/1001855/7197/i/950/depositphotos_71978857-stock-photo-vintage-rotary-phone.jpg'\n      }\n      alt=\"main\"\n    />\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from './redux/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticted(state),\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from './redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticted(state),\n});\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component } from 'react';\nimport { Switch } from 'react-router-dom';\nimport PhoneBook from './phonebook/PhoneBook';\nimport Login from './login/Login';\nimport Register from './register/Register';\nimport Header from './header/Header';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nimport { homePage } from './homepage/HomePage';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRefresh();\n  }\n  render() {\n    return (\n      <>\n        <Header />\n        <Switch>\n          <PublicRoute exact path=\"/\" component={homePage} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={Register}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={Login}\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            component={PhoneBook}\n            redirectTo=\"/login\"\n          />\n        </Switch>\n      </>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onRefresh: authOperations.getCurrrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './actions';\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  persistStore,\n  persistReducer,\n} from 'redux-persist';\nimport contacts from './contact/redusers';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contacts,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './components/redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}